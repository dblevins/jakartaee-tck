<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project name="smoke">

    <!-- 
        These are the smoke tests for the JAX-WS 2.0 TCK. This is a 
        subset of tests in the TCK and is meant to provide a variety of
        test coverage without the need for the entire TCK. It is by no
        means meant to be a substitute for the entire TCK and a user is
        required to run the entire TCK to verify compatibility.
    -->

    <property name="smoke.clientserver.dirs" value="
             com/sun/ts/tests/jaxws/wsi/w2j/rpc/literal/R4003 
             com/sun/ts/tests/jaxws/wsi/w2j/rpc/literal/swatest 
             com/sun/ts/tests/jaxws/wsi/w2j/document/literal/R4003 
             com/sun/ts/tests/jaxws/wsi/w2j/document/literal/swatest 
             com/sun/ts/tests/jaxws/ee/j2w/rpc/literal/handlerchaintest1 
             com/sun/ts/tests/jaxws/ee/j2w/rpc/literal/handlerchaintest2 
             com/sun/ts/tests/jaxws/ee/j2w/rpc/literal/addnumberssoap12test 
             com/sun/ts/tests/jaxws/ee/w2j/rpc/literal/marshalltest 
             com/sun/ts/tests/jaxws/ee/w2j/rpc/literal/parametermodetest 
             com/sun/ts/tests/jaxws/ee/w2j/rpc/literal/headertest 
             com/sun/ts/tests/jaxws/ee/w2j/rpc/literal/holdertest 
             com/sun/ts/tests/jaxws/ee/w2j/rpc/literal/sec/secbasic 
             com/sun/ts/tests/jaxws/ee/w2j/document/literal/wrapperstyle/marshalltest 
             com/sun/ts/tests/jaxws/ee/w2j/document/literal/marshalltest 
             com/sun/ts/tests/jaxws/ee/w2j/document/literal/customization/external 
             com/sun/ts/tests/jaxws/ee/w2j/document/literal/customization/embedded 
             com/sun/ts/tests/jaxws/ee/w2j/document/literal/headertest 
             com/sun/ts/tests/jaxws/ee/w2j/document/literal/catalogtest 
             com/sun/ts/tests/jaxws/ee/w2j/document/literal/mtomtest 
             com/sun/ts/tests/jaxws/ee/w2j/document/literal/holdertest 
             com/sun/ts/tests/jaxws/mapping/j2wmapping/rpc/literal/withoutannotations 
             com/sun/ts/tests/jaxws/mapping/j2wmapping/rpc/literal/withannotations 
             com/sun/ts/tests/jaxws/mapping/j2wmapping/document/literal/wrapped 
             com/sun/ts/tests/jaxws/mapping/j2wmapping/document/literal/bare 
             com/sun/ts/tests/jaxws/mapping/w2jmapping/rpc/literal/noncustomization 
             com/sun/ts/tests/jaxws/mapping/w2jmapping/rpc/literal/customization 
             com/sun/ts/tests/jaxws/mapping/w2jmapping/rpc/literal/annotations 
             com/sun/ts/tests/jaxws/mapping/w2jmapping/document/literal/noncustomization 
             com/sun/ts/tests/jaxws/mapping/w2jmapping/document/literal/customization 
             com/sun/ts/tests/jaxws/mapping/w2jmapping/document/literal/annotations"/>
             com/sun/ts/tests/jaxws/wsa"/>

         
     <property name="smoke.seperate.client.server.dirs" value="
             com/sun/ts/tests/jaxws/ee/j2w/rpc/literal/nosei 
             com/sun/ts/tests/jaxws/ee/j2w/document/literal/marshalltest 
             com/sun/ts/tests/jaxws/ee/j2w/document/literal/restful 
             com/sun/ts/tests/jaxws/ee/j2w/document/literal/sessionmaintaintest 
             com/sun/ts/tests/jaxws/ee/j2w/document/literal/nosei 
             com/sun/ts/tests/jaxws/ee/w2j/document/literal/soap12test"/>

    <target name="buildsmoketests" >
         <dosubdirs todo="build" srcdir="${ts.home}/src/com/sun/ts/tests/jaxws" includes="**/common/**, **/wsi/utils/**, **/wsi/requests/**, **/wsi/constants/**" />
         <dosubdirs todo="build" srcdir="${ts.home}/src/com/sun/ts/tests/jaxws" includes="**/sharedwebservices/**" />
         <dosubdirs todo="build" srcdir="${ts.home}/src/com/sun/ts/tests/jaxws" includes="**/sharedclients/**" />
         <elementappend original="${smoke.seperate.client.server.dirs}" suffix="/server" property="smoke.seperate.server.dirs"/>
         <dosubdirs todo="build" srcdir="${ts.home}/src" includes="${smoke.seperate.server.dirs}" />

         <elementappend original="${smoke.seperate.client.server.dirs}" suffix="/client" property="smoke.seperate.client.dirs"/>
         <dosubdirs todo="build" srcdir="${ts.home}/src" includes="${smoke.seperate.client.dirs}" />

         <dosubdirs todo="build" srcdir="${ts.home}/src/com/sun/ts/tests/jaxws" includes="${smoke.clientserver.dirs}" />
         <dosubdirs srcdir="${ts.home}/src/com/sun/ts/tests/signaturetest/jaxws" todo="build"/>

    </target>

    <target name="runsmoketests" depends="init, set.keywords, prepare.work.report.dirs">
        <java classname="com.sun.javatest.tool.Main" fork="yes">
            <classpath>
                <pathelement path="${ts.harness.classpath}:${class.dir}" />
            </classpath>
            <sysproperty key="java.compiler" value="NONE" />
            <sysproperty key="TS_HOME" value="${ts.home}" />
            <sysproperty key="ts_home" value="${ts.home}" />
            <sysproperty key="ts.home" value="${ts.home}" />
            <sysproperty key="jaxws.classes" value="${jaxws.classes}" />
            <sysproperty key="JAVA_HOME" value="${env.JAVA_HOME}" />
            <sysproperty key="cts.jtroutput" value="true" />
            <sysproperty key="windir" value="${env.windir}" />
            <sysproperty key="SYSTEMROOT" value="${env.SystemRoot}" />
            <sysproperty key="javatest.security.allowPropertiesAccess" value="true" />
            <sysproperty key="java.security.policy" value="${ts.home}/bin/harness.policy" />
            <sysproperty key="deliverable.class" value="${deliverable.class}" />
            <sysproperty key="cts.harness.debug" value="${cts.harness.debug}" />
            <sysproperty key="same.jvm" value="${same.jvm}" />
            <sysproperty key="TZ" value="${tz}" />
            <arg line=" -EsysProps" />
            <arg line=" -batch" />
            <arg line=" -testsuite ${ts.home}/src" />
            <arg line=" -workDir ${work.dir}" />
            <arg line=" -envFiles ${ts.home}/bin/ts.jte" />
            <arg line=" -env ${ts.env}" />
            <arg line=" -excludeList ${ts.home}/bin/ts.jtx" />
            <arg line=" -timeoutFactor ${javatest.timeout.factor}" />
            <arg line=" -keywords &quot;${keywords}&quot;"/>
            <arg line=" -tests ${smoke.clientserver.dirs} ${smoke.seperate.client.server.dirs}" />
	       <arg line=" -runtests ${report.arg}"/>
        </java>
    </target>

    <target name="init" >
       <antfetch antfile="${ts.home}/bin/build.xml" target="init" return="env.HARNESS_DEBUG,cts.harness.debug,ts.env" />
    </target>
    <target name="set.keywords" >
       <antfetch antfile="${ts.home}/bin/build.xml" target="set.keywords" return="keywords" />
    </target>
    <target name="prepare.work.report.dirs" >
       <antfetch antfile="${ts.home}/bin/build.xml" target="prepare.work.report.dirs" return="work.dir,report.arg" />
    </target>

</project>

