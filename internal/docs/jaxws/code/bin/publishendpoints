#!/bin/sh -x
#
# Copyright (c) 2006, 2020 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0, which is available at
# http://www.eclipse.org/legal/epl-2.0.
#
# This Source Code may also be made available under the following Secondary
# Licenses when the conditions for such availability set forth in the
# Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
# version 2 with the GNU Classpath Exception, which is available at
# https://www.gnu.org/software/classpath/license.html.
#
# SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
#

#
# ------------------------------------------------------

if [ -z "${TS_HOME}" ]
then
    echo "ERROR: TS_HOME is NOT SET!! "
    echo "Please set TS_HOME (ie: /files/ts ) before running tsant."
    echo "Setup is INCOMPLETE - Exiting $0"
    exit 1
fi
if [ ! -d "${TS_HOME}" ]
then
    echo "ERROR: TS_HOME is NOT a valid directory"
    echo "Please set TS_HOME (ie: /files/ts ) to a valid directory"
    echo "before running tsant."
    echo "Setup is INCOMPLETE - Exiting $0"
    exit 1
fi
echo "TS_HOME is set to:${TS_HOME}"


if [ -z "${JAVA_HOME}" ]
then
    echo "ERROR: JAVA_HOME is NOT SET!! "
    echo "Please set JAVA_HOME (ie: /files/javase ) before running tsant."
    echo "Setup is INCOMPLETE - Exiting $0"
    exit 1
fi
if [ ! -d "${JAVA_HOME}" ]
then
    echo "ERROR: JAVA_HOME is NOT a valid directory"
    echo "Please set JAVA_HOME (ie: /files/javase ) to a valid directory"
    echo "before running tsant."
    echo "Setup is INCOMPLETE - Exiting $0"
    exit 1
fi
echo "JAVA_HOME is set to:${JAVA_HOME}"


application=com.sun.ts.tests.jaxws.util.PublishEndpoint

tcklibjars=$TS_HOME/lib/tsharness.jar:$TS_HOME/lib/jaxwstck.jar

jaxwsjars=/files/xml/jaxws/jaxws/lib/jaxws-api.jar:/files/xml/jaxws/jaxws/lib/jaxws-rt.jar:/files/xml/jaxws/jaxws/lib/http.jar

tsjte=$TS_HOME/bin/ts.jte
datfile=$TS_HOME/bin/jaxws-url-props.dat
tshostclasses=${TS_HOME}/classes

args="$@"
echo args=$args
echo "
Start Parsing Arguments .....
"
ARGLIST=
while [ $# -ne 0 ]
do
    case $1 in
    -keywords)
		shift
          keywords=$1
		shift
          ;;
    #-keywords)
		#keywords=`echo $1 | awk -F= '{print $2}'`
		#shift
		#;;
	*)
		ARGLIST="$ARGLIST $1"
		shift
	     ;;
    esac
done
echo "
Done Parsing Arguments .....
"
echo args=$args
echo keywords=$keywords
echo ARGLIST=$ARGLIST
if [ "$keywords" -eq "forward" ]
then
webappdir=`grep "^webcontainer.home=" $tsjte | awk -F= '{print $2}'`
else
webappdir=`grep "^webcontainer.home.ri=" $tsjte | awk -F= '{print $2}'`
fi
echo webappdir=$webappdir
webappjars=
jarlist=`ls $webappdir/*.jar`
for item in $jarlist; do
   webappjars="$webappjars:$item"
done

${JAVA_HOME}/bin/java -cp "$webappjars:$tcklibjars:$jaxwsjars:$tshostclasses" $application -webappdir $webappdir -tshome $TS_HOME $ARGLIST
