<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

          <!-- Chapter 4 Service Description -->

		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R0001</id>
			<description>Either an INSTANCE's WSDL 1.1 description,
its UDDI binding template, or both MUST be available to an
authorized consumer upon request.</description>
			<location chapter="4" section="1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2028</id>
			<description>A DESCRIPTION using the WSDL namespace
(prefixed "wsdl" in this Profile) MUST be valid according to the
XML Schema found at
"http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd".</description>
			<location chapter="4" section="2.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2029</id>
			<description>A DESCRIPTION using the WSDL SOAP binding
namespace (prefixed "soapbind" in this Profile) MUST be valid
according to the XML Schema found at
"http://schemas.xmlsoap.org/wsdl/soap/2003-02-11.xsd".</description>
			<location chapter="4" section="2.1" />
		</assertion>
		
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2001</id>
			<description>A DESCRIPTION MUST only use the WSDL
"import" statement to import another WSDL description.</description>
			<location chapter="4" section="2.2" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2803</id>
			<description>In a DESCRIPTION, the namespace attribute
of the wsdl:import MUST NOT be a relative URI.</description>
			<location chapter="4" section="2.2" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2002</id>
			<description>To import XML Schema Definitions, a
DESCRIPTION MUST use the XML Schema "import" statement.</description>
			<location chapter="4" section="2.2" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2003</id>
			<description>A DESCRIPTION MUST use the XML Schema
"import" statement only within the xsd:schema element
of the types section.</description>
			<location chapter="4" section="2.2" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2004</id>
			<description>In a DESCRIPTION the schemaLocation
attribute of an xsd:import element MUST NOT resolve to any document
whose root element is not "schema" from the namespace
"http://www.w3.org/2001/XMLSchema".</description>
			<location chapter="4" section="2.2" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2009</id>
			<description>An XML Schema directly or indirectly
imported by a DESCRIPTION MAY include the Unicode Byte Order Mark
(BOM).</description>
			<location chapter="4" section="2.2" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2010</id>
			<description>An XML Schema directly or indirectly
imported by a DESCRIPTION MUST use either UTF-8 or UTF-16
encoding.</description>
			<location chapter="4" section="2.2" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2011</id>
			<description>An XML Schema directly or indirectly
imported by a DESCRIPTION MUST use version 1.0 of the eXtensible
Markup Language W3C Recommendation.</description>
			<location chapter="4" section="2.2" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2007</id>
			<description>A DESCRIPTION MUST specify a non-empty
location attribute on the wsdl:import
element.</description>
			<location chapter="4" section="2.3" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2008</id>
			<description>A CONSUMER MAY, but need not, retrieve a
WSDL description from the URI specified in the location attribute
on a wsdl:import element.</description>
			<location chapter="4" section="2.4" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2022</id>
			<description>When they appear in a DESCRIPTION,
wsdl:import elements MUST precede all other elements
from the WSDL namespace except wsdl:documentation.</description>
			<location chapter="4" section="2.5" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2023</id>
			<description>When they appear in a DESCRIPTION,
wsdl:types elements MUST precede all other elements
from the WSDL namespace except wsdl:documentation and
wsdl:import.</description>
			<location chapter="4" section="2.5" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R4004</id>
			<description>A DESCRIPTION MUST use version 1.0 of the
eXtensible Markup Language W3C Recommendation.</description>
			<location chapter="4" section="2.6" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R4005</id>
			<description>A DESCRIPTION SHOULD NOT contain the
namespace declaration
xmlns:xml="http://www.w3.org/XML/1998/namespace".</description>
			<location chapter="4" section="2.7" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R4002</id>
			<description>A DESCRIPTION MAY include the Unicode Byte
Order Mark (BOM).</description>
			<location chapter="4" section="2.8" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R4003</id>
			<description>A DESCRIPTION MUST use either UTF-8 or
UTF-16 encoding.</description>
			<location chapter="4" section="2.9" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2005</id>
			<description>The targetNamespace attribute
on the wsdl:definitions element of a description that
is being imported MUST have same the value as the
namespace attribute on the wsdl:import
element in the importing DESCRIPTION.</description>
			<location chapter="4" section="2.10" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2030</id>
			<description>In a DESCRIPTION the wsdl:documentation
element MAY be present as the first child element of wsdl:import,
wsdl:part and wsdl:definitions in addition to the elements cited in
the WSDL1.1 specification.WSDL20 </description>
			<location chapter="4" section="2.11" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2025</id>
			<description>A DESCRIPTION containing WSDL extensions
MUST NOT use them to contradict other requirements of the
Profile.</description>
			<location chapter="4" section="2.12" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2026</id>
			<description>A DESCRIPTION SHOULD NOT include extension
elements with a wsdl:required attribute value of
"true" on any WSDL construct (wsdl:binding,
wsdl:portType, wsdl:message,
wsdl:types or wsdl:import) that claims
conformance to the Profile.</description>
			<location chapter="4" section="2.12" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2027</id>
			<description>If during the processing of a description,
a consumer encounters a WSDL extension element that has a
wsdl:required attribute with a boolean value of "true"
that the consumer does not understand or cannot process, the
CONSUMER MUST fail processing.</description>
			<location chapter="4" section="2.12" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2101</id>
			<description>A DESCRIPTION MUST NOT use QName
references to WSDL components in namespaces that have been neither
imported, nor defined in the referring WSDL document.</description>
			<location chapter="4" section="3.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2102</id>
			<description>A QName reference to a Schema component in
a DESCRIPTION MUST use the namespace defined in the
targetNamespace attribute on the
xsd:schema element, or to a namespace defined in the
namespace attribute on an xsd:import
element within the xsd:schema element.</description>
			<location chapter="4" section="3.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2105</id>
			<description>All xsd:schema elements
contained in a wsdl:types element of a DESCRIPTION
MUST have a targetNamespace attribute with a valid and
non-null value, UNLESS the xsd:schema element has
xsd:import and/or xsd:annotation as its
only child element(s).</description>
			<location chapter="4" section="3.2" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2110</id>
			<description>In a DESCRIPTION, declarations MUST NOT
extend or restrict the soapenc:Array type.</description>
			<location chapter="4" section="3.3" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2111</id>
			<description>In a DESCRIPTION, declarations MUST NOT
use wsdl:arrayType attribute in the type declaration.</description>
			<location chapter="4" section="3.3" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2112</id>
			<description>In a DESCRIPTION, elements SHOULD NOT be
named using the convention ArrayOfXXX.</description>
			<location chapter="4" section="3.3" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2113</id>
			<description>An ENVELOPE MUST NOT include the
soapenc:arrayType attribute.</description>
			<location chapter="4" section="3.3" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2114</id>
			<description>The target namespace for WSDL definitions
and the target namespace for schema definitions in a DESCRIPTION
MAY be the same.WSDL20 </description>
			<location chapter="4" section="3.4" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2201</id>
			<description>A document-literal binding in a
DESCRIPTION MUST, in each of its soapbind:body
element(s), have at most one part listed in the parts
attribute, if the parts attribute is specified.</description>
			<location chapter="4" section="4.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2209</id>
			<description>A wsdl:binding in a
DESCRIPTION SHOULD bind every wsdl:part of a
wsdl:message in the wsdl:portType to
which it refers with a binding extension element.</description>
			<location chapter="4" section="4.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2210</id>
			<description>If a document-literal binding in a
DESCRIPTION does not specify the parts attribute on a
soapbind:body element, the corresponding abstract
wsdl:message MUST define zero or one
wsdl:parts.</description>
			<location chapter="4" section="4.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2202</id>
			<description>A wsdl:binding in a
DESCRIPTION MAY contain soapbind:body element(s) that
specify that zero parts form the soap:Body.</description>
			<location chapter="4" section="4.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2203</id>
			<description>An rpc-literal binding in a DESCRIPTION
MUST refer, in its soapbind:body element(s), only to
wsdl:part element(s) that have been defined using the
type attribute.</description>
			<location chapter="4" section="4.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2211</id>
			<description>An ENVELOPE described with an rpc-literal
binding MUST NOT have the xsi:nil attribute with a
value of "1" or "true" on the part accessors.</description>
			<location chapter="4" section="4.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2207</id>
			<description>A wsdl:message in a
DESCRIPTION MAY contain wsdl:parts that use the
elements attribute provided those
wsdl:parts are not referred to by a
soapbind:body in an rpc-literal binding.</description>
			<location chapter="4" section="4.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2204</id>
			<description>A document-literal binding in a
DESCRIPTION MUST refer, in each of its soapbind:body
element(s), only to wsdl:part element(s) that have
been defined using the element attribute.</description>
			<location chapter="4" section="4.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2208</id>
			<description>A binding in a DESCRIPTION MAY contain
soapbind:header element(s) that refer to
wsdl:parts in the same wsdl:message that
are referred to by its soapbind:body element(s).</description>
			<location chapter="4" section="4.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2212</id>
			<description>An ENVELOPE MUST contain exactly one part
accessor element for each of the wsdl:part elements
bound to the envelope's corresponding soapbind:body
element.</description>
			<location chapter="4" section="4.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2213</id>
			<description>In a doc-literal description where the
value of the parts attribute of soapbind:body is an empty string,
the corresponding ENVELOPE MUST have no element content in the
soap:Body element.</description>
			<location chapter="4" section="4.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2214</id>
			<description>In a rpc-literal description where the
value of the parts attribute of soapbind:body is an empty string,
the corresponding ENVELOPE MUST have no part accessor elements.</description>
			<location chapter="4" section="4.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2205</id>
			<description>A wsdl:binding in a
DESCRIPTION MUST refer, in each of its
soapbind:header, soapbind:headerfault and
soapbind:fault elements, only to
wsdl:part element(s) that have been defined using the
element attribute.</description>
			<location chapter="4" section="4.2" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2206</id>
			<description>A wsdl:message in a
DESCRIPTION containing a wsdl:part that uses the
element attribute MUST refer, in that attribute, to a
global element declaration.</description>
			<location chapter="4" section="4.3" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2301</id>
			<description>The order of the elements in the
soap:body of an ENVELOPE MUST be the same as that of
the wsdl:parts in the wsdl:message that
describes it.</description>
			<location chapter="4" section="5.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2302</id>
			<description>A DESCRIPTION MAY use the
parameterOrder attribute of an
wsdl:operation element to indicate the return value
and method signatures as a hint to code generators.</description>
			<location chapter="4" section="5.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2303</id>
			<description>A DESCRIPTION MUST NOT use
Solicit-Response and Notification type operations in a
wsdl:portType definition.</description>
			<location chapter="4" section="5.2" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2304</id>
			<description>A wsdl:portType in a
DESCRIPTION MUST have operations with distinct values for their
name attributes.</description>
			<location chapter="4" section="5.3" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2305</id>
			<description>A wsdl:operation element
child of a wsdl:portType element in a DESCRIPTION MUST
be constructed so that the parameterOrder attribute,
if present, omits at most 1 wsdl:part from the output
message.</description>
			<location chapter="4" section="5.4" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2306</id>
			<description>A wsdl:message in a
DESCRIPTION MUST NOT specify both type and
element attributes on the same
wsdl:part.</description>
			<location chapter="4" section="5.5" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2401</id>
			<description>A wsdl:binding element in a
DESCRIPTION MUST use WSDL SOAP Binding as defined in WSDL 1.1
Section 3.</description>
			<location chapter="4" section="6.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2701</id>
			<description>The wsdl:binding element in a
DESCRIPTION MUST be constructed so that its
soapbind:binding child element specifies the
transport attribute.</description>
			<location chapter="4" section="7.1" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2702</id>
			<description>A wsdl:binding element in a
DESCRIPTION MUST specify the HTTP transport protocol with SOAP
binding. Specifically, the transport attribute of its
soapbind:binding child MUST have the value
"http://schemas.xmlsoap.org/soap/http".</description>
			<location chapter="4" section="7.2" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2705</id>
			<description>A wsdl:binding in a
DESCRIPTION MUST either be a rpc-literal binding or a
document-literal binding.</description>
			<location chapter="4" section="7.3" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2706</id>
			<description>A wsdl:binding in a
DESCRIPTION MUST use the value of "literal" for the
use attribute in all soapbind:body,
soapbind:fault, soapbind:header and
soapbind:headerfault elements.</description>
			<location chapter="4" section="7.4" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2709</id>
			<description>A wsdl:portType in a
DESCRIPTION MAY have zero or more wsdl:bindings that
refer to it, defined in the same or other WSDL documents.</description>
			<location chapter="4" section="7.5" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2710</id>
			<description>The operations in a
wsdl:binding in a DESCRIPTION MUST result in operation
signatures that are different from one another.</description>
			<location chapter="4" section="7.6" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2711</id>
			<description>A DESCRIPTION SHOULD NOT have more than
one wsdl:port with the same value for the
location attribute of the
soapbind:address element.</description>
			<location chapter="4" section="7.7" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2712</id>
			<description>A document-literal binding MUST be
serialized as an ENVELOPE with a soap:Body whose child
element is an instance of the global element declaration referenced
by the corresponding wsdl:message part.</description>
			<location chapter="4" section="7.8" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2714</id>
			<description>For one-way operations, an INSTANCE MUST
NOT return a HTTP response that contains an envelope. Specifically,
the HTTP response entity-body must be empty.</description>
			<location chapter="4" section="7.9" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2750</id>
			<description>A CONSUMER MUST ignore an envelope carried
in a HTTP response message in a one-way operation.</description>
			<location chapter="4" section="7.9" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2727</id>
			<description>For one-way operations, a CONSUMER MUST
NOT interpret a successful HTTP response status code (i.e., 2xx) to
mean the message is valid or that the receiver would process
it.</description>
			<location chapter="4" section="7.9" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2716</id>
			<description>A document-literal binding in a
DESCRIPTION MUST NOT have the namespace attribute
specified on contained soapbind:body,
soapbind:header, soapbind:headerfault and
soapbind:fault elements.</description>
			<location chapter="4" section="7.10" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2717</id>
			<description>An rpc-literal binding in a DESCRIPTION
MUST have the namespace attribute specified, the value
of which MUST be an absolute URI, on contained
soapbind:body elements.</description>
			<location chapter="4" section="7.10" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2726</id>
			<description>An rpc-literal binding in a DESCRIPTION
MUST NOT have the namespace attribute specified on
contained soapbind:header,
soapbind:headerfault and soapbind:fault
elements.</description>
			<location chapter="4" section="7.10" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2718</id>
			<description>A wsdl:binding in a
DESCRIPTION MUST have the same set of wsdl:operations
as the wsdl:portType to which it refers.</description>
			<location chapter="4" section="7.11" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2719</id>
			<description>A wsdl:binding in a
DESCRIPTION MAY contain no soapbind:headerfault
elements if there are no known header faults.</description>
			<location chapter="4" section="7.12" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2740</id>
			<description>A wsdl:binding in a
DESCRIPTION SHOULD contain a soapbind:fault describing
each known fault.</description>
			<location chapter="4" section="7.13" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2741</id>
			<description>A wsdl:binding in a
DESCRIPTION SHOULD contain a soapbind:headerfault
describing each known header fault.</description>
			<location chapter="4" section="7.13" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2742</id>
			<description>An ENVELOPE MAY contain fault with a
detail element that is not described by a
soapbind:fault element in the corresponding WSDL
description.</description>
			<location chapter="4" section="7.13" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2743</id>
			<description>An ENVELOPE MAY contain the details of a
header processing related fault in a SOAP header block that is not
described by a soapbind:headerfault element in the
corresponding WSDL description.</description>
			<location chapter="4" section="7.13" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2720</id>
			<description>A wsdl:binding in a
DESCRIPTION MUST use the part attribute with a schema
type of "NMTOKEN" on all contained soapbind:header and
soapbind:headerfault elements.</description>
			<location chapter="4" section="7.14" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2749</id>
			<description>A wsdl:binding in a
DESCRIPTION MUST NOT use the parts attribute on
contained soapbind:header and
soapbind:headerfault elements.</description>
			<location chapter="4" section="7.14" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2721</id>
			<description>A wsdl:binding in a
DESCRIPTION MUST have the name attribute specified on
all contained soapbind:fault elements.</description>
			<location chapter="4" section="7.15" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2754</id>
			<description>In a DESCRIPTION, the value of the
name attribute on a soapbind:fault
element MUST match the value of the name attribute on
its parent wsdl:fault element.</description>
			<location chapter="4" section="7.15" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2722</id>
			<description>A wsdl:binding in a
DESCRIPTION MAY specify the use attribute on contained
soapbind:fault elements.</description>
			<location chapter="4" section="7.16" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2723</id>
			<description>If in a wsdl:binding in a
DESCRIPTION the use attribute on a contained
soapbind:fault element is present, its value MUST be
"literal".</description>
			<location chapter="4" section="7.16" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2707</id>
			<description>A wsdl:binding in a
DESCRIPTION that contains one or more soapbind:body,
soapbind:fault, soapbind:header or
soapbind:headerfault elements that do not specify the
use attribute MUST be interpreted as though the value
"literal" had been specified in each case.</description>
			<location chapter="4" section="7.17" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2724</id>
			<description>If an INSTANCE receives an envelope that
is inconsistent with its WSDL description, it SHOULD generate a
soap:Fault with a faultcode of "Client", unless a
"MustUnderstand" or "VersionMismatch" fault is generated.</description>
			<location chapter="4" section="7.18" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2725</id>
			<description>If an INSTANCE receives an envelope that
is inconsistent with its WSDL description, it MUST check for
"VersionMismatch", "MustUnderstand" and "Client" fault conditions
in that order.</description>
			<location chapter="4" section="7.18" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2729</id>
			<description>An ENVELOPE described with an rpc-literal
binding that is a response MUST have a wrapper element whose name
is the corresponding wsdl:operation name suffixed with
the string "Response".</description>
			<location chapter="4" section="7.19" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2735</id>
			<description>An ENVELOPE described with an rpc-literal
binding MUST place the part accessor elements for parameters and
return value in no namespace.</description>
			<location chapter="4" section="7.20" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2755</id>
			<description>The part accessor elements in a MESSAGE
described with an rpc-literal binding MUST have a local name of the
same value as the name attribute of the corresponding
wsdl:part element.</description>
			<location chapter="4" section="7.20" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2737</id>
			<description>An ENVELOPE described with an rpc-literal
binding MUST namespace qualify the descendents of part accessor
elements for the parameters and the return value, as defined by the
schema in which the part accessor types are defined.</description>
			<location chapter="4" section="7.21" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2738</id>
			<description>An ENVELOPE MUST include all
soapbind:headers specified on a
wsdl:input or wsdl:output of a
wsdl:operation of a wsdl:binding that
describes it.</description>
			<location chapter="4" section="7.22" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2739</id>
			<description>An ENVELOPE MAY contain SOAP header blocks
that are not described in the wsdl:binding that
describes it.</description>
			<location chapter="4" section="7.23" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2753</id>
			<description>An ENVELOPE containing SOAP header blocks
that are not described in the appropriate wsdl:binding
MAY have the mustUnderstand attribute on such SOAP
header blocks set to '1'.</description>
			<location chapter="4" section="7.23" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2751</id>
			<description>The order of soapbind:header
elements in soapbind:binding sections of a DESCRIPTION
MUST be considered independent of the order of SOAP header blocks
in the envelope.</description>
			<location chapter="4" section="7.24" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2752</id>
			<description>An ENVELOPE MAY contain more than one
instance of each SOAP header block for each
soapbind:header element in the appropriate child of
soapbind:binding in the corresponding description.</description>
			<location chapter="4" section="7.24" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2744</id>
			<description>A HTTP request MESSAGE MUST contain a
SOAPAction HTTP header field with a quoted value equal
to the value of the soapAction attribute of
soapbind:operation, if present in the corresponding
WSDL description.</description>
			<location chapter="4" section="7.25" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2745</id>
			<description>A HTTP request MESSAGE MUST contain a
SOAPAction HTTP header field with a quoted empty
string value, if in the corresponding WSDL description, the
soapAction of soapbind:operation is
either not present, or present with an empty string as its
value.</description>
			<location chapter="4" section="7.25" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2747</id>
			<description>A CONSUMER MUST understand and process all
WSDL 1.1 SOAP Binding extension elements, irrespective of the
presence or absence of the wsdl:required attribute on
an extension element; and irrespective of the value of the
wsdl:required attribute, when present.</description>
			<location chapter="4" section="7.26" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2748</id>
			<description>A CONSUMER MUST NOT interpret the presence
of the wsdl:required attribute on a
soapbind extension element with a value of "false" to
mean the extension element is optional in the envelopes generated
from the WSDL description.</description>
			<location chapter="4" section="7.26" />
		</assertion>
          <assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2800</id>
			<description>A DESCRIPTION MAY use any construct from
XML Schema 1.0.</description>
			<location chapter="4" section="8" />
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>WSI:SPEC:R2801</id>
			<description>A DESCRIPTION MUST use XML Schema 1.0
Recommendation as the basis of user defined datatypes and
structures.</description>
			<location chapter="4" section="8" />
		</assertion>
