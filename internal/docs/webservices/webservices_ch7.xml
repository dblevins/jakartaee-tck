<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

		<!-- Chapter Annotations -->
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:7000</id>
			<description>
Service QName. In addition to specifying the WSDL document, the developer may also specify the WSDL Service QName in the wsdl-service element for each Port defined in the deployment descriptor when JAX-WS based runtime is used. This element is required if the portcomponent being defined is a Provider Interface defined by JAX-WS.
			</description>
			<location chapter = "7" section = "1.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:7001</id>
			<description>
MTOM/XOP support. The developer may specify if MTOM/XOP support for the portcomponent is enabled or disabled by using enable-mtom element when JAX-WS based runtime is used. By default the value of this element is false. If this element is not specified then the default value is assumed.
			</description>
			<location chapter = "7" section = "1.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:7002</id>
			<description>
Protocol Binding. The developer may specify the protocol binding to use for the portcomponent by specifying the URI or a pre-defined token (like ##SOAP11_HTTP,
##SOAP12_HTTP, ##XML_HTTP) in the protocol-binding element when JAX-WS based runtime is used. The default protocol binding is ##SOAP11_HTTP. If this element is not specified then the default value is assumed. The pre-defined tokens essentially act as alias for the actual URI for the protocol binding. The URIs for these pre-defined tokens are listed below:
 ##SOAP11_HTTP - " http://schemas.xmlsoap.org/wsdl/soap/http "
 ##SOAP12_HTTP - " http://www.w3.org/2003/05/soap/bindings/HTTP/ "
 ##XML_HTTP - "http://www.w3.org/2004/08/wsdl/http"
			</description>
			<location chapter = "7" section = "1.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:7003</id>
			<description>
Handlers. A developer may optionally specify handlers associated with the port-component using either the handler element when JAX-RPC based runtime is used. or the handlerchains element when JAX-WS based runtime is used. With JAX-WS, the soap-header element declared in the deployment descriptor is not required since that information is embedded in the implementation of the Handler class. With JAX-WS, init-params element in the deployment descriptors is no longer used. If needed, the developer should use the environment entry elements (&lt;env-entry&gt;) declared in the application component's deployment descriptor for this purpose. These can be injected into the handler using the @Resource annotation or looked up using JNDI.
			</description>
			<location chapter = "7" section = "1.2"/>
		</assertion>
