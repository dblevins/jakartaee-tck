<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

		<!-- Chapter 5	Java Mapping To XML/WSDL -->
        <!-- next available id is 5011 -->
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>5001</id>
			<description>The wsdl:definitions targetNamespace maps to the value of the @WebService.targetNamespace member-value.</description>
			<location chapter = "5" section = "2"/>
		</assertion>
                <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>5002</id>
			<description>The local name of the wsdl:portType maps to the value of the @WebService.name member-value.</description>
			<location chapter = "5" section = "2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>5003</id>
			<description>The local name of the wsdl:service maps to the value of the @WebService.serviceName member-value.</description>
			<location chapter = "5" section = "2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>5004</id>
			<description>Each wsdl:port MUST be of the same wsdl:portType, but MAY have different bindings.</description>
			<location chapter = "5" section = "2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>5005</id>
			<description>The local name of the wsdl:port maps to the value of the @WebService.portName member-value.</description>
			<location chapter = "5" section = "2"/>
		</assertion>
		<assertion required = "false" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
			<id>5006</id>
			<description>The name wsdl:binding sections is not significant and are left implementation-defined.</description>
			<location chapter = "5" section = "2"/>
		</assertion>
                <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>5007</id>
			<description>The wsdl:service MUST contain a distinct wsdl:port for every transport endpoint supported by the service. </description>
			<location chapter = "5" section = "2"/>
		</assertion>
                <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>5008</id>
			<description>Each exposed web method in a JSR-181 annotated class or interface is mapped to a wsdl:operation on the class/interface WSDL portType.  The wsdl:operation local name maps to the value of the @WebMethod.operationName member-value, if present.  If not present, the wsdl:operation local name is mapped from the name of the Java method according to the rules defined in JAX-WS 2.0 [5], section 3.5.</description>
			<location chapter = "5" section = "3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>5009</id>
			<description>The mapped wsdl:operation contains both wsdl:input and wsdl:output elements, unless the method is annotated as @Oneway.  @Oneway methods have only a wsdl:input element.</description>
			<location chapter = "5" section = "3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>5010</id>
			<description>Java types used as method parameters, return values, and exceptions are mapped according to the rules defined in JAX-WS 2.0 [5], section 3.6.</description>
			<location chapter = "5" section = "3"/>
		</assertion>






                






		
