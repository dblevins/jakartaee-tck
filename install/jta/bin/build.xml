<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project name="TS top level" default="usage">
    <!--
      The following properties are also defined by TSBuildListener:
      ts.home
      class.dir: defined as ${ts.home}/classes
      vehicle.dir: defined as com/sun/ts/tests/common/vehicle
    -->
    
    <!-- IMPORTS -->
    <import file="xml/ts.top.import.xml" optional="true"/>
    <import file="../../../bin/xml/ts.top.import.xml" optional="true"/>
    
    <property name="lib.jar" value="${ts.home}/lib/jsftck.jar"/>
    <property name="all.test.dir" 
              value="com/sun/ts/tests/jta/ee/common,
                     com/sun/ts/tests/jta/ee/usertransaction,
                     com/sun/ts/tests/signaturetest/jta"/>
    
    <target name="build.all.tests"
            description="Builds all tests for this deliverable">  
        <dosubdirs srcdir="${src.dir}" 
                   todo="build" includes="${all.test.dir}"/>
    </target>

     <!-- ts.jte props sanitizer -->
     <target name="jte.cleanup">
         <props.sanitizer file="${bin.dir}/ts.jte" quiet="true">
               <property name="webServerHost" value="localhost" />
               <property name="webServerHome" value="" />
         </props.sanitizer>
     </target>
    
    <!-- Tasks for managing ts specific jar  -->
    <target name="tslib.clean">
        <delete failonerror="false">
            <fileset dir="${class.dir}">
                <include name="${lib.pkg.dir}/deliverable/tck/*.class"/>
                <include name="${lib.pkg.dir}/implementation/sun/common/SunRIURL.class"/>             
            </fileset>
        </delete>
        <delete failonerror="false" file="${lib.dir}/${tslib.name}.jar"/>
    </target>
    
    <target name="tslib.compile" depends="tslib.clean">
        <ts.javac includes="${lib.pkg.dir}/deliverable/tck/*.java,
                            ${lib.pkg.dir}/implementation/sun/common/SunRIURL.java">      
            <classpath>
                <pathelement path="${ts.lib.classpath}" />
            </classpath>	
        </ts.javac>
    </target>
    
    <target name="tslib" depends="tslib.compile">
        <tstamp/>
        <ts.lib.jar>
            <include name="${lib.pkg.dir}/deliverable/tck/*.class"/>
            <include name="${lib.pkg.dir}/implementation/sun/common/SunRIURL.class"/>
        </ts.lib.jar>
        <echo message="The TCK specific library jar, '${tslib.name}.jar', has been built."/>
    </target>
    
    <target name="config.vi" description="Configures a server under test">
       <antcall target="-delete.tck.ext.jars"/>
       <antcall target="-copy.tck.ext.jars"/>
       <ant antfile="${common.bin.dir}/xml/impl/glassfish/s1as.xml" target="filter.password.file"/>
       <ant antfile="${common.bin.dir}/xml/impl/glassfish/s1as.xml" target="restart.server"/>
    </target>
    
    <target name="-delete.tck.ext.jars">
       <mkdir dir="${extension.dir}"/>
       <delete file="${extension.dir}/jtatck.jar" quiet="true"/>
       <delete file="${extension.dir}/tsharness.jar" quiet="true"/>
    </target>

    <target name="-copy.tck.ext.jars">
        <mkdir dir="${extension.dir}"/>
       <copy file="${ts.home}/lib/jtatck.jar" todir="${extension.dir}"/>
        <copy file="${ts.home}/lib/tsharness.jar" todir="${extension.dir}"/>
    </target>
    
</project>
