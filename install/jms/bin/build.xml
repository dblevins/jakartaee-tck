<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2013, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<!--
$Id$
-->
<project name="TS top level" default="usage">

    <property name="all.test.dir"
		 value="com/sun/ts/tests/signaturetest/jms,
		 	com/sun/ts/tests/jms/common,
		 	com/sun/ts/tests/jms/core20,
		 	com/sun/ts/tests/jms/core"/>

    <import file="xml/ts.top.import.xml" optional="true"/>
    <import file="../../../bin/xml/ts.top.import.xml" optional="true"/>

    <!-- **************************************************************** -->
    <!-- Tasks for managing ts specific jar  -->
    <!-- ts specific jar (in this case jmstck.jar) will be created in 
		ts.home/lib. -->

   <target name="tslib.clean" depends="translatepath">
        <delete failonerror="false">
       <fileset dir="${class.dir}">
                <include name="${lib.pkg.dir}/deliverable/**" />
                <include name="${lib.pkg.dir}/implementation/sun/jms/**" />
      </fileset>
      </delete>
      <delete failonerror="false" file="${ts.home}/lib/${tslib.name}"/>
   </target>

    <target name="tslib.compile" depends="tslib.clean">
        <ts.javac includes="${lib.pkg.dir}/deliverable/tck/**
                            ${lib.pkg.dir}/deliverable/jms/**
			    ${lib.pkg.dir}/deliverable/*.java
                            ${lib.pkg.dir}/implementation/sun/jms/*.java">
            <classpath>
                <pathelement path="${ts.harness.classpath}" />
            </classpath>
        </ts.javac>
    </target>

  <target name="tslib" depends="tslib.compile">
    <tstamp/>
	<ts.lib.jar>
            <include name="${lib.pkg.dir}/deliverable/tck/**" />
            <include name="${lib.pkg.dir}/deliverable/jms/**" />
            <include name="${lib.pkg.dir}/deliverable/*.class" />
            <include name="${lib.pkg.dir}/implementation/sun/jms/*.class" />
    </ts.lib.jar>
    <ant antfile="config.vi.xml" dir="${bin.dir}/xml/impl/${impl.vi}" target="build.porting.impl.jar"/>
  </target>

    <!-- build porting impl jar for the impl under test -->
   	<target name="build.porting.impl.jar" description="Builds the porting impl classes for the impl under test">
   		<ant antfile="config.vi.xml" dir="${bin.dir}/xml/impl/${impl.vi}" target="build.porting.impl.jar"/>
   	</target>

    <!-- these targets are needed for configuring the VI implementations for jms tests -->

    <!-- config.vi/clean.vi/reconfig.vi -->

    <target name="config.vi" description="Configure JMS vendor implementation under test">
	<ant antfile="${bin.dir}/xml/impl/${impl.vi}/config.vi.xml" target="config.vi" />
    </target>

    <target name="clean.vi" description="Unconfigure JMS vendor implementation under test">
	<ant antfile="${bin.dir}/xml/impl/${impl.vi}/config.vi.xml" target="clean.vi" />
    </target>

    <target name="reconfig.vi" depends="clean.vi, config.vi" description="Reconfigure JMS vendor implementation under test"/>

    <!-- list.tck.jms.objects  -->

    <target name="list.tck.jms.objects" description="List JMS TCK administrative objects">
	<ant antfile="${bin.dir}/xml/impl/${impl.vi}/config.vi.xml" target="list.tck.jms.objects" />
    </target>

    <!-- start.server.vi/stop.server.vi/restart.server.vi -->

    <target name="start.server.vi" description="Start JMS vendor implementation under test">
	<ant antfile="${bin.dir}/xml/impl/${impl.vi}/config.vi.xml" target="start-server" />
    </target>

    <target name="stop.server.vi" description="Stop JMS vendor implementation under test">
	<ant antfile="${bin.dir}/xml/impl/${impl.vi}/config.vi.xml" target="stop-server" />
    </target>

    <target name="restart.server.vi" depends="stop.server.vi, start.server.vi" description="Restart JMS vendor implementation under test"/>

    <!-- edit.tsjte -->

    <target name="edit.tsjte">
	<ant antfile="${bin.dir}/xml/impl/${impl.vi}/config.vi.xml" target="edit.tsjte" />
    </target>

    <!-- list.connector.resources/list.admin.objects -->

    <target name="list.connector.resources" description="List JMS CTS connector resources">
	<ant antfile="${bin.dir}/xml/impl/${impl.vi}/config.vi.xml" target="list-connector-resources" />
    </target>

    <target name="list.admin.objects" description="List JMS CTS administrative objects">
	<ant antfile="${bin.dir}/xml/impl/${impl.vi}/config.vi.xml" target="list-admin-objects" />
    </target>

</project>

