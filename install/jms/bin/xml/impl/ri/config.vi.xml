<!--
  Copyright (c) 2013, 2020 Oracle and/or its affiliates. All rights reserved.. All rights reserved.

  This program and the accompanying materials are made available under the
  terms of the Eclipse Public License v. 2.0, which is available at
  http://www.eclipse.org/legal/epl-2.0.

  This Source Code may also be made available under the following Secondary
  Licenses when the conditions for such availability set forth in the
  Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
  version 2 with the GNU Classpath Exception, which is available at
  https://www.gnu.org/software/classpath/license.html.

  SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

 $Id$

 ========================================================================================
 This script will configure, setup, and start the Standalone JMS Reference 
 Implementation or the Open Message Queue Product for a JMS TCK run. This
 script will also unconfigure, cleanup, and stop the Standalone JMS Reference
 Implementation or the Open Message Queue Product after the JMS TCK run is
 complete.

 (1) Type "ant or ant help" to get usage. These 2 tasks are all you need to
     configure/unconfigure, setup/cleanup, start/stop the Standalone JMS RI
     or the Open Message Queue Product to to be run against the JMS TCK.

     % ant config.vi   configure, setup, and start JMS RI or OpenMQ for a JMS TCK run
     % ant clean.vi    unconfigure, cleanup, and stop JMS RI or OpenMQ after JMS TCK run

 (2) Type "ant help2" for individual ant tasks.
 ========================================================================================
-->
<project name="Standalone JMS RI or Open Message Queue config/setup script for JMS TCK Run" default="help" basedir=".">

    <!-- IMPORTS -->
    <import file="./ts.common.props.xml" optional="true"/>
    <import file="../../../../bin/xml/ts.common.props.xml" optional="true"/>
    <import file="../../../../../../bin/xml/ts.common.props.xml" optional="true"/>

    <property name="admin.pass.file.encoded" value="${admin.pass.file}.encoded"/>

    <target name="init">
	<delete file="${admin.pass.file}" failonerror="false"/>
	<delete dir="${jndi.fs.dir}" failonerror="false"/>
        <mkdir dir="${jndi.fs.dir}"/>
        <echo message="Echoing: imq.imqcmd.password=${admin.pass} > ${admin.pass.file}"/>
        <echo message="imq.imqcmd.password=${admin.pass}" file="${admin.pass.file}"/>
    </target>

    <target name="cleanup">
	<delete file="${admin.pass.file}" failonerror="false"/>
	<delete dir="${jndi.fs.dir}" failonerror="false"/>
    </target>

    <target name="configPlatform" depends="checkPlatform, configUnix, configWindows"/>

    <target name="checkPlatform">
        <condition property ="isUnixPlatform">
           <os family="unix"/>
        </condition>
        <condition property ="isWindowsPlatform">
           <os family="windows"/>
        </condition>
        <condition property ="os" value="unix">
           <os family="unix"/>
        </condition>
        <condition property ="os" value="windows">
           <os family="windows"/>
        </condition>
	<condition property ="isMac">
	   <os family="mac"/>
	</condition>
    </target>

    <target name="configUnix" depends="checkPlatform" if="isUnixPlatform">
           <echo message="on unix"/>
           <property name="dir.sep" value="/"/>
           <property name="exec.imqusermgr" value="${ri.home}/bin/imqusermgr"/>
           <property name="exec.imqusermgr.part2" value=""/>
           <property name="exec.imqobjmgr" value="${ri.home}/bin/imqobjmgr"/>
           <property name="exec.imqobjmgr.part2" value=""/>
           <property name="exec.imqcmd" value="${ri.home}/bin/imqcmd"/>
           <property name="exec.imqcmd.part2" value=""/>
           <property name="exec.imqbrokerd" value="${ri.home}/bin/imqbrokerd"/>
           <property name="exec.imqbrokerd.part2" value=""/>
    </target>

    <target name="configWindows" depends="checkPlatform" if="isWindowsPlatform">
           <echo message="on windows"/>
           <property name="dir.sep" value="\\"/>
           <property name="exec.imqusermgr" value="cmd.exe"/>
           <property name="exec.imqusermgr.part2" value=" /c ${ri.home}\bin\imqusermgr"/>
           <property name="exec.imqobjmgr" value="cmd.exe"/>
           <property name="exec.imqobjmgr.part2" value=" /c ${ri.home}\bin\imqobjmgr"/>
           <property name="exec.imqcmd" value="cmd.exe"/>
           <property name="exec.imqcmd.part2" value=" /c ${ri.home}\bin\imqcmd"/>
           <property name="exec.imqbrokerd" value="cmd.exe"/>
           <property name="exec.imqbrokerd.part2" value=" /c ${ri.home}\bin\imqbrokerd"/>
    </target>

    <target name="startbkr" depends="init,encodeAdminPassword,configPlatform">
	<echo message="Start JMS RI or OpenMQ Broker via (imqbrokerd) ....."/>
	<exec executable="${exec.imqbrokerd}" spawn="true">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqbrokerd.part2} -reset store"/>
        </exec>
	<echo message="Sleeping 10 seconds ....."/>
        <sleep seconds="10"/>
    </target>

    <target name="stopbkr" depends="configPlatform">
	<echo message="Stop JMS RI or OpenMQ Broker via (imqcmd shutdown bkr) ....."/>
	<exec executable="${exec.imqcmd}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqcmd.part2}"/>
             <arg line="shutdown bkr -f -u ${admin.user} -passfile ${admin.pass.file}"/>
        </exec>
    </target>

    <target name="create.tck.jms.objects" depends="configPlatform">
	<echo message="Create JMS Queue MY_QUEUE in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f add -l MY_QUEUE -o imqDestinationName=MY_QUEUE -t q"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Create JMS Queue MY_QUEUE2 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f add -l MY_QUEUE2 -o imqDestinationName=MY_QUEUE2 -t q"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Create JMS Queue testQ0 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f add -l testQ0 -o imqDestinationName=testQ0 -t q"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Create JMS Queue testQ1 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f add -l testQ1 -o imqDestinationName=testQ1 -t q"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Create JMS Queue testQ2 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f add -l testQ2 -o imqDestinationName=testQ2 -t q"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Create JMS Queue testQueue2 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f add -l testQueue2 -o imqDestinationName=testQueue2 -t q"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Create JMS Queue Q2 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f add -l Q2 -o imqDestinationName=Q2 -t q"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Create JMS Topic MY_TOPIC in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f add -l MY_TOPIC -o imqDestinationName=MY_TOPIC -t t"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Create JMS Topic MY_TOPIC2 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f add -l MY_TOPIC2 -o imqDestinationName=MY_TOPIC2 -t t"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Create JMS Queue testT0 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f add -l testT0 -o imqDestinationName=testT0 -t t"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Create JMS Queue testT1 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f add -l testT1 -o imqDestinationName=testT1 -t t"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Create JMS Queue testT2 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f add -l testT2 -o imqDestinationName=testT2 -t t"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Create JMS ConnectionFactory MyConnectionFactory in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f add -l MyConnectionFactory -t cf"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Create JMS ConnectionFactory MyQueueConnectionFactory in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f add -l MyQueueConnectionFactory -t qf"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Create JMS ConnectionFactory MyTopicConnectionFactory in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f add -l MyTopicConnectionFactory -t tf"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Create JMS ConnectionFactory DURABLE_SUB_CONNECTION_FACTORY in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f add -l DURABLE_SUB_CONNECTION_FACTORY -o imqConfiguredClientID=cts"/>
             <arg line="-t tf -j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
    </target>

    <target name="delete.tck.jms.objects" depends="configPlatform">
	<echo message="Delete JMS Queue MY_QUEUE from JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f delete -l MY_QUEUE -t q"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Delete JMS Queue MY_QUEUE2 from JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f delete -l MY_QUEUE2 -t q"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Delete JMS Queue testQ0 from JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f delete -l testQ0 -t q"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Delete JMS Queue testQ1 from JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f delete -l testQ1 -t q"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Delete JMS Queue testQ2 from JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f delete -l testQ2 -t q"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Delete JMS Queue testQueue2 from JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f delete -l testQueue2 -t q"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Delete JMS Queue Q2 from JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f delete -l Q2 -t q"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Delete JMS Topic MY_TOPIC from JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f delete -l MY_TOPIC -t t"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Delete JMS Topic MY_TOPIC2 from JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f delete -l MY_TOPIC2 -t t"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Delete JMS Queue testT0 from JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f delete -l testT0 -t t"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Delete JMS Queue testT1 from JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f delete -l testT1 -t t"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Delete JMS Queue testT2 from JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f delete -l testT2 -t t"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Delete JMS ConnectionFactory MyConnectionFactory from JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f delete -l MyConnectionFactory -t cf"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Delete JMS ConnectionFactory MyTopicConnectionFactory from JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<echo message="Delete JMS ConnectionFactory MyQueueConnectionFactory from JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f delete -l MyQueueConnectionFactory -t qf"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Delete JMS ConnectionFactory MyTopicConnectionFactory from JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f delete -l MyTopicConnectionFactory -t tf"/>
             <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
	<echo message="Delete JMS ConnectionFactory DURABLE_SUB_CONNECTION_FACTORY from JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="-f delete -l DURABLE_SUB_CONNECTION_FACTORY -o imqConfiguredClientID=cts"/>
             <arg line="-t tf -j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
    </target>

    <target name="encodeAdminPassword" depends="configPlatform">
	<echo message="Encode admin password in JMS RI or OpenMQ via (imqusermgr) ......"/>
	<exec executable="${exec.imqusermgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqusermgr.part2}"/>
             <arg line="encode -f -src ${admin.pass.file} -target ${admin.pass.file.encoded}"/>
        </exec>
        <move file="${admin.pass.file.encoded}" tofile="${admin.pass.file}" overwrite="true"/>
    </target>

    <target name="create.tck.users" depends="configPlatform">
	<echo message="Create user j2ee in JMS RI or OpenMQ via (imqusermgr) ......"/>
	<exec executable="${exec.imqusermgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqusermgr.part2}"/>
             <arg line="add -f -u j2ee -p j2ee -g ${admin.user}"/>
        </exec>
    </target>

    <target name="delete.tck.users" depends="configPlatform">
	<echo message="Delete user j2ee in JMS RI or OpenMQ via (imqusermgr) ......"/>
	<exec executable="${exec.imqusermgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqusermgr.part2}"/>
             <arg line="delete -f -u j2ee"/>
        </exec>
    </target>

    <target name="list-admin-objects" depends="list.tck.jms.objects"/>
    <target name="list.tck.jms.objects" depends="configPlatform">
	<echo message="List JMS objects in JMS RI or OpenMQ object store via (imgobjmgr) ......"/>
	<exec executable="${exec.imqobjmgr}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqobjmgr.part2}"/>
             <arg line="list -j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
        </exec>
    </target>

    <target name="list.bkr.destinations" depends="configPlatform">
	<echo message="List JMS destinations in JMS RI or OpenMQ Broker via (imqcmd) ......"/>
	<exec executable="${exec.imqcmd}">
            <env key="IMQ_JAVAHOME" value="${java.home}"/>
             <arg line="${exec.imqcmd.part2}"/>
             <arg line="list dst -f -u ${admin.user} -passfile ${admin.pass.file}"/>
        </exec>
    </target>

    <!--
	config.vi/clean.vi targets
    -->
    <target name="config.vi" depends="startmq"/>
    <target name="clean.vi" depends="stopmq"/>

    <!--
	start-server/stop-server targets
    -->
    <target name="start-server" depends="startbkr"/>
    <target name="stop-server" depends="stopbkr"/>

    <target name="startmq" depends="startbkr, create.tck.users, create.tck.jms.objects, list.tck.jms.objects"/>
    <target name="stopmq" depends="stopbkr, delete.tck.users, delete.tck.jms.objects, list.tck.jms.objects, cleanup"/>

     <!--
       Edit ts.jte file and set the following properties:
       jms.classes=		Set to the JMS jars/classes for Open Message Queue
       Set "harness.log.traceflag=true"
     -->
     <target name="edit.tsjte">
       <copy file="${bin.dir}/ts.jte.copy" tofile="${bin.dir}/ts.jte" overwrite="true"/>
	<replaceregexp file="${bin.dir}/ts.jte"
	    match="(^jms.classes=.*)$$"
	    replace="jms.classes=$\{ri.jars\}" byline="true"/>
	<replaceregexp file="${bin.dir}/ts.jte"
	    match="(^harness.log.traceflag=.*)$$"
	    replace="harness.log.traceflag=true" byline="true"/>
     </target>

    <target name="help">
	<echo message="ant config.vi      configure, setup, and start JMS RI or OpenMQ for JMS TCK run ..."/>
	<echo message="                   [creates JMS admin objects and JMS TCK users in JMS RI or OpenMQ]"/>
	<echo message="ant clean.vi       unconfigure, cleanup, and stop JMS RI or OpenMQ after JMS TCK run ..."/>
	<echo message="                   [deletes JMS admin objects and JMS TCK users in JMS RI or OpenMQ]"/>
	<echo message="ant edit.tsjte     Edit ts.jte and configure it for JMS RI or OpenMQ ..."/>
    </target>

    <target name="help2">
	<echo message="ant startbkr                 start JMS RI or OpenMQ Broker for JMS TCK run ..."/>
	<echo message="ant stopbkr                  stop JMS RI or OpenMQ Broker after JMS TCK run ..."/>
	<echo message="ant create.tck.users         create JMS TCK users in JMS RI or OpenMQ ..."/>
	<echo message="ant delete.tck.users         delete JMS TCK users in JMS RI or OpenMQ ..."/>
	<echo message="ant create.tck.jms.objects   create JMS TCK admin objects in JMS RI or OpenMQ object store ..."/>
	<echo message="ant delete.tck.jms.objects   delete JMS TCK admin objects in JMS RI or OpenMQ object store ..."/>
	<echo message="ant list.tck.jms.objects     list JMS TCK admin objects in JMS RI or OpenMQ object store ..."/>
	<echo message="ant list.bkr.destinations    list destinations in JMS RI or OpenMQ Broker ..."/>
    </target>

    <target name="build.porting.impl.jar">
     <tstamp/>
    </target>
</project>
