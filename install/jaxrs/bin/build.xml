<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project name="JAX-RS TCK" default="usage">
    
    <!-- IMPORTS -->
    <import file="xml/ts.top.import.xml" optional="true"/>
    <import file="../../../bin/xml/ts.top.import.xml" optional="true"/>
    
    <property name="all.test.dir" value="
    com/sun/ts/tests/jaxrs,
    com/sun/ts/tests/common/webclient,
    com/sun/ts/tests/signaturetest/jaxrs"/>
    <presetdef name="javatest.xmlreport">
        <!-- 
          The javatest.gui task is a presetdef that calls the javatest presetdef
          passing the additional XML content needed to invoke the javatest GUI.
          To see the preset values, refer to the included XML below that shows 
          the content of the javatest.gui presetdef.
        -->
        <javatest>
            <arg line=" -EsysProps" />
            <arg line=" -batch" />
            <arg line=" -testsuite ${ts.home}/src" />
            <arg line=" -workDir ${work.dir}" />
            <arg line=" -envFiles ${bin.dir}/ts.jte" />
            <arg line=" -env ${ts.env}" />
            <arg line=" -excludeList ${bin.dir}/ts.jtx" />
            <arg line=" -writereport -type xml ${report.dir}/xml" />
        </javatest>    
    </presetdef>
    
    <!-- creates xml report-->
    <target name="xmlreport" 
            depends="set.report.prop, init, backup.report.dir, set.report.arg, translatepath"
            description="Generates the test report for all tests in the current work directory">
        <javatest.xmlreport/>
    </target>
    
    <target name="tslib.clean" depends="translatepath">
        <delete failonerror="false">
            <fileset dir="${class.dir}">
                <include name="${lib.pkg.dir}/deliverable/tck/**"/>
                <include name="${lib.pkg.dir}/implementation/sun/common/**"/>
                <include name ="${lib.pkg.dir}/implementation/sun/jersey/**"/>
                <include name="${provider.dir}/"/>
            </fileset>
        </delete>
        <delete failonerror="false" file="${lib.dir}/${tslib.name}.jar"/>
    </target>
    
    <target name="tslib.compile" depends="tslib.clean, bind.dtds">
        <ts.javac includes="${lib.pkg.dir}/deliverable/tck/**,
                  ${lib.pkg.dir}/porting/**/*.java,
                  ${lib.pkg.dir}/implementation/sun/common/**,
                  ${lib.pkg.dir}/implementation/sun/jersey/**,
                  ${provider.dir}/**"
                  excludes="${lib.pkg.dir}/implementation/sun/javaee/*.java,
                  ${lib.pkg.dir}/porting/TSDeployment*.java,
        ${lib.pkg.dir}/porting/TSJMS*.java">
            <classpath>
                <pathelement path="${ts.lib.classpath}" />
            </classpath>
        </ts.javac>
    </target>
    
    <target name="tslib" depends="tslib.compile">
        <tstamp/>
        <delete failonerror="true" file="${lib.dir}/${tslib.name}.jar"/>
        <ts.lib.jar>
            <include name="${lib.pkg.dir}/deliverable/tck/**"/>
            <include name="${lib.pkg.dir}/implementation/sun/common/**"/>
        </ts.lib.jar>
    </target>
    
    <!-- To update JAX-RS war with implementation specific servlet info before deployment -->
    <target name="update.jaxrs.wars">
        <ant antfile="${jaxrs_impl_name}.xml"
             dir="${ts.home}/bin/xml/impl/${impl.vi}" target="pre.deploy"/>
    </target>
    
    <!-- these targets are needed for configuring the VI and RI implementations for JAX-RS tests -->
    <target name="config.vi">
	     <ant antfile="${bin.dir}/xml/impl/${impl.vi}/config.vi.xml" target="config.vi" />
    </target>

    <target name="clean.vi">
	     <ant antfile="${bin.dir}/xml/impl/${impl.vi}/config.vi.xml" target="clean.vi" />
    </target>

    <target name="config.ri">
	     <ant antfile="${bin.dir}/xml/impl/${impl.vi}/config.ri.xml" target="config.ri" />
    </target>

    <target name="clean.ri">
	     <ant antfile="${bin.dir}/xml/impl/${impl.vi}/config.ri.xml" target="clean.ri" />
    </target>    
    
</project>

